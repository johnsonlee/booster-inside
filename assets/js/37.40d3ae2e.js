(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{362:function(t,s,a){"use strict";a.r(s);var e=a(33),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"静态分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态分析"}},[t._v("#")]),t._v(" 静态分析")]),t._v(" "),a("h2",{attrs:{id:"静态分析能做什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态分析能做什么？"}},[t._v("#")]),t._v(" 静态分析能做什么？")]),t._v(" "),a("p",[t._v("经过大量实践发现，很多问题其实是可以在产品发布或上线之前就能发现的，然而，由于缺乏相应的工具，导致很多问题被隐藏，并带到了线上，直到在用户侧发生，如：卡顿、崩溃、安全问题等等，通过静态分析，我们可以尽可能早的找出这些潜在的问题和风险，在上线之前将其修复，这也是创立 "),a("em",[t._v("Booster")]),t._v(" 这个项目的初衷。")]),t._v(" "),a("h2",{attrs:{id:"booster-的静态分析解决了什么问题？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#booster-的静态分析解决了什么问题？"}},[t._v("#")]),t._v(" Booster 的静态分析解决了什么问题？")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/didi/booster/tree/master/booster-task-analyser",target:"_blank",rel:"noopener noreferrer"}},[t._v("booster-task-analyser"),a("OutboundLink")],1),t._v(" 通过黑/白名单的方式对 APP 进行扫描，并生成相应的分析报告，使得开发者对 APP 的质量有一个更全面和深入的了解，并为更深层次的优化提供思路，包括但不限于：")]),t._v(" "),a("ol",[a("li",[t._v("发现潜在的性能问题，如：可能阻塞主线程/ UI 线程的 API 调用；")]),t._v(" "),a("li",[t._v("发现风险 API 调用；")]),t._v(" "),a("li",[t._v("分析依赖关系；")])]),t._v(" "),a("h2",{attrs:{id:"analyser-的实现思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#analyser-的实现思路"}},[t._v("#")]),t._v(" "),a("em",[t._v("Analyser")]),t._v(" 的实现思路")]),t._v(" "),a("h3",{attrs:{id:"独立的-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#独立的-task"}},[t._v("#")]),t._v(" 独立的 Task")]),t._v(" "),a("p",[a("em",[t._v("Booster")]),t._v(" 的静态分析采用独立的 "),a("em",[t._v("task")]),t._v(" 来执行，之所以这样设计，主要有几个方面的考虑：")]),t._v(" "),a("ol",[a("li",[t._v("对应用进行静态分析的频率不像构建那么频繁，所以，"),a("em",[t._v("Task")]),t._v(" 比 "),a("em",[t._v("Transformer")]),t._v(" 更合适；")]),t._v(" "),a("li",[a("em",[t._v("CHA (Class Hierarchy Analysis)")]),t._v(" 需要提前拿到所有类信息，而 "),a("em",[t._v("Transformer")]),t._v(" 是流水线处理，也不太合适；")]),t._v(" "),a("li",[t._v("静态分析的过程可能会比较慢，作为 "),a("em",[t._v("Transformer")]),t._v(" 可能会严重影响构建效率，而且应用的构建并不依赖静态分析的产出物；")])]),t._v(" "),a("p",[a("em",[t._v("Analyser Task")]),t._v(" 的依赖关系如下图所示：")]),t._v(" "),a("svg",{attrs:{width:"514pt",height:"188pt",viewBox:"0.00 0.00 513.51 188.00",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("g",{staticClass:"graph",attrs:{id:"graph0",transform:"scale(1 1) rotate(0) translate(4 184)"}},[a("title",[t._v("analyser")]),t._v(" "),a("polygon",{attrs:{fill:"#ffffff",stroke:"transparent",points:"-4,4 -4,-184 509.5063,-184 509.5063,4 -4,4"}}),t._v(" "),a("g",{staticClass:"node",attrs:{id:"node1"}},[a("title",[t._v("analyse")]),t._v(" "),a("polygon",{attrs:{fill:"#f18f01",stroke:"transparent",points:"281.4639,-180 216.9891,-180 216.9891,-144 281.4639,-144 281.4639,-180"}}),t._v(" "),a("text",{attrs:{"text-anchor":"middle",x:"249.2265",y:"-157.8","font-family":"Helvetica,sans-Serif","font-size":"14.00",fill:"#ffffff"}},[t._v("analyse")])]),t._v(" "),a("g",{staticClass:"node",attrs:{id:"node2"}},[a("title",[t._v("analyseDebug")]),t._v(" "),a("polygon",{attrs:{fill:"#006e90",stroke:"transparent",points:"238.2016,-108 132.2514,-108 132.2514,-72 238.2016,-72 238.2016,-108"}}),t._v(" "),a("text",{attrs:{"text-anchor":"middle",x:"185.2265",y:"-85.8","font-family":"Helvetica,sans-Serif","font-size":"14.00",fill:"#ffffff"}},[t._v("analyseDebug")])]),t._v(" "),a("g",{staticClass:"edge",attrs:{id:"edge1"}},[a("title",[t._v("analyse->analyseDebug")]),t._v(" "),a("path",{attrs:{fill:"none",stroke:"#555555",d:"M233.0766,-143.8314C225.5548,-135.3694 216.47,-125.1489 208.2461,-115.8971"}}),t._v(" "),a("polygon",{attrs:{fill:"#555555",stroke:"#555555",points:"210.8535,-113.5621 201.5938,-108.4133 205.6216,-118.2127 210.8535,-113.5621"}})]),t._v(" "),a("g",{staticClass:"node",attrs:{id:"node3"}},[a("title",[t._v("analyseRelease")]),t._v(" "),a("polygon",{attrs:{fill:"#006e90",stroke:"transparent",points:"404.8079,-108 289.6451,-108 289.6451,-72 404.8079,-72 404.8079,-108"}}),t._v(" "),a("text",{attrs:{"text-anchor":"middle",x:"347.2265",y:"-85.8","font-family":"Helvetica,sans-Serif","font-size":"14.00",fill:"#ffffff"}},[t._v("analyseRelease")])]),t._v(" "),a("g",{staticClass:"edge",attrs:{id:"edge2"}},[a("title",[t._v("analyse->analyseRelease")]),t._v(" "),a("path",{attrs:{fill:"none",stroke:"#555555",d:"M273.956,-143.8314C286.1427,-134.8779 301.0088,-123.9558 314.1577,-114.2955"}}),t._v(" "),a("polygon",{attrs:{fill:"#555555",stroke:"#555555",points:"316.5183,-116.9042 322.5049,-108.1628 312.3738,-111.263 316.5183,-116.9042"}})]),t._v(" "),a("g",{staticClass:"node",attrs:{id:"node4"}},[a("title",[t._v("transformClassesWithXxxForDebug")]),t._v(" "),a("polygon",{attrs:{fill:"#99c24d",stroke:"transparent",points:"238.6799,-36 -.2269,-36 -.2269,0 238.6799,0 238.6799,-36"}}),t._v(" "),a("text",{attrs:{"text-anchor":"middle",x:"119.2265",y:"-13.8","font-family":"Helvetica,sans-Serif","font-size":"14.00",fill:"#ffffff"}},[t._v("transformClassesWithXxxForDebug")])]),t._v(" "),a("g",{staticClass:"edge",attrs:{id:"edge3"}},[a("title",[t._v("analyseDebug->transformClassesWithXxxForDebug")]),t._v(" "),a("path",{attrs:{fill:"none",stroke:"#555555",d:"M168.5719,-71.8314C160.8151,-63.3694 151.4463,-53.1489 142.9655,-43.8971"}}),t._v(" "),a("polygon",{attrs:{fill:"#555555",stroke:"#555555",points:"145.4427,-41.4198 136.1053,-36.4133 140.2826,-46.1499 145.4427,-41.4198"}})]),t._v(" "),a("g",{staticClass:"node",attrs:{id:"node5"}},[a("title",[t._v("transformClassesWithXxxForRelease")]),t._v(" "),a("polygon",{attrs:{fill:"#99c24d",stroke:"transparent",points:"505.2865,-36 257.1665,-36 257.1665,0 505.2865,0 505.2865,-36"}}),t._v(" "),a("text",{attrs:{"text-anchor":"middle",x:"381.2265",y:"-13.8","font-family":"Helvetica,sans-Serif","font-size":"14.00",fill:"#ffffff"}},[t._v("transformClassesWithXxxForRelease")])]),t._v(" "),a("g",{staticClass:"edge",attrs:{id:"edge4"}},[a("title",[t._v("analyseRelease->transformClassesWithXxxForRelease")]),t._v(" "),a("path",{attrs:{fill:"none",stroke:"#555555",d:"M355.8061,-71.8314C359.5623,-63.8771 364.0522,-54.369 368.2063,-45.5723"}}),t._v(" "),a("polygon",{attrs:{fill:"#555555",stroke:"#555555",points:"371.4261,-46.9503 372.5313,-36.4133 365.0964,-43.9612 371.4261,-46.9503"}})])])]),t._v(" "),a("h3",{attrs:{id:"类继承分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类继承分析"}},[t._v("#")]),t._v(" 类继承分析")]),t._v(" "),a("p",[t._v("类继承关系分析对于静态分析至关重要，它决定了分析结果的准确性和全面性，在 "),a("em",[t._v("Transform")]),t._v(" 中 "),a("em",[t._v("CHA")]),t._v(" 是通过 "),a("em",[t._v("ClassLoader")]),t._v(" 来实现的，相对来说比较简单，参见："),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-transform-spi/src/main/kotlin/com/didiglobal/booster/transform/KlassPool.kt",target:"_blank",rel:"noopener noreferrer"}},[t._v("KlassPool"),a("OutboundLink")],1),t._v(" & "),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-transform-spi/src/main/kotlin/com/didiglobal/booster/transform/Klass.kt",target:"_blank",rel:"noopener noreferrer"}},[t._v("Klass"),a("OutboundLink")],1),t._v("，主要是解决如何判断两个类型是否有继承关系的问题，"),a("em",[t._v("Analyser")]),t._v(" 的 "),a("em",[t._v("CHA")]),t._v(" 采用的方式是提前加载所有 "),a("em",[t._v("Class")]),t._v("，然后进行分析，主要有以下几个方面的原因：")]),t._v(" "),a("ol",[a("li",[a("em",[t._v("ClassLoader")]),t._v(" 加载 "),a("em",[t._v("Class")]),t._v(" 时，虽然可以不对类进行初始化，但是 "),a("em",[t._v("ClassLoader")]),t._v(" 会对 "),a("em",[t._v("bytecode")]),t._v(" 进行 "),a("em",[t._v("verify")]),t._v(" ，可能会抛出 "),a("em",[t._v("VerifyError")]),t._v(" 导致整个分析过程失败；")]),t._v(" "),a("li",[t._v("性能开销 —— "),a("em",[t._v("ClassLoader")]),t._v(" 加载 "),a("em",[t._v("Class")]),t._v(" 的性能跟 "),a("em",[t._v("ASM")]),t._v(" 对比相差甚远；")]),t._v(" "),a("li",[t._v("除了分析类的继承关系外，还需要分析字段和方法以及注解，通过 "),a("em",[t._v("Class")]),t._v(" 反射得到的信息有限；")]),t._v(" "),a("li",[a("em",[t._v("Task")]),t._v(" 相对于"),a("em",[t._v("Transform")]),t._v(" 比较独立，如果在 "),a("em",[t._v("Transform")]),t._v(" 的过程中加载所有的 "),a("em",[t._v("Class")]),t._v(" ，可能导致内存吃紧，甚至 OOM")])]),t._v(" "),a("h3",{attrs:{id:"静态分析入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态分析入口"}},[t._v("#")]),t._v(" 静态分析入口")]),t._v(" "),a("p",[t._v("任何静态分析都需要入口 (Entry Point)，如果是普通的程序，一般都是 "),a("code",[t._v("main")]),t._v(" 方法，而对于 Android 应用来说，主要是 "),a("code",[t._v("Application")]),t._v(" 、四大组件以及 XML 布局等等，所以，首先要找到这些入口。")]),t._v(" "),a("h4",{attrs:{id:"四大组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四大组件"}},[t._v("#")]),t._v(" 四大组件")]),t._v(" "),a("p",[t._v("像 "),a("code",[t._v("Application")]),t._v(" 及四大组件都在 "),a("em",[t._v("AndroidManifest.xml")]),t._v(" 里，通过 "),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-android-gradle-api/src/main/kotlin/com/didiglobal/booster/gradle/VariantScope.kt#L142",target:"_blank",rel:"noopener noreferrer"}},[t._v("mergedManifests"),a("OutboundLink")],1),t._v(" 就能获取到合并后的 "),a("em",[t._v("AndroidManifest.xml")])]),t._v(" "),a("h4",{attrs:{id:"自定义-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义-view"}},[t._v("#")]),t._v(" 自定义 View")]),t._v(" "),a("p",[t._v("查找自定义 "),a("em",[t._v("View")]),t._v(" 最直接的方法就是解析 "),a("em",[t._v("Layout XML")]),t._v(" ，通过 "),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-android-gradle-api/src/main/kotlin/com/didiglobal/booster/gradle/VariantScope.kt#L148",target:"_blank",rel:"noopener noreferrer"}},[t._v("mergeRes"),a("OutboundLink")],1),t._v(" 就能获取到，只不过是 "),a("em",[t._v("AAPT2")]),t._v(" 的产物 —— "),a("em",[t._v("flat")]),t._v(" 文件，这也就是 "),a("a",{attrs:{href:"https://github.com/didi/booster/tree/master/booster-aapt2",target:"_blank",rel:"noopener noreferrer"}},[t._v("booster-aapt2"),a("OutboundLink")],1),t._v(" 模块的由来。")]),t._v(" "),a("blockquote",[a("p",[t._v("通过实测发现：解析 "),a("em",[t._v("flat")]),t._v(" 文件的速度不如直接解析 XML 源文件，所以，最终的实现只解析了 "),a("em",[t._v("flat")]),t._v(" 文件的 "),a("em",[t._v("header")]),t._v(" 部分，然后通过 "),a("em",[t._v("header")]),t._v(" 定位到源文件的路径。")])]),t._v(" "),a("h4",{attrs:{id:"线程注释标注的方法和类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程注释标注的方法和类"}},[t._v("#")]),t._v(" 线程注释标注的方法和类")]),t._v(" "),a("p",[t._v("Android 本身提供了 "),a("a",{attrs:{href:"https://developer.android.com/studio/write/annotations#thread-annotations",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thread Annotations"),a("OutboundLink")],1),t._v("，帮助编译器和静态分析工具提升代码检查的准确性，所以，只要有类或者方法用 "),a("a",{attrs:{href:"https://developer.android.com/studio/write/annotations#thread-annotations",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thread Annotations"),a("OutboundLink")],1),t._v(" 标注过，则可以认为该类或者方法就是线程入口类或者方法。")]),t._v(" "),a("p",[t._v("考虑到一些主流的应用框架也有线程注解，因此，"),a("em",[t._v("Analyser")]),t._v(" 对 "),a("em",[t._v("Event Bus")]),t._v(" 做了支持，通过 "),a("code",[t._v("@Subscribe(threadMode = MAIN)")]),t._v(" 标的方法会被识别为主线程入口方法。")]),t._v(" "),a("h2",{attrs:{id:"如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[t._v("#")]),t._v(" 如何使用")]),t._v(" "),a("p",[t._v("首先在 "),a("em",[t._v("build.gradle")]),t._v(" 中引用 "),a("em",[t._v("booster-task-analyser")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("buildscript "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    ext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("booster_version "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1.0'")]),t._v("\n\n    dependencies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        classpath "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.didiglobal.booster:booster-gradle-plugin:'),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("booster_version")]),t._v('"')]),t._v("\n        classpath "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.didiglobal.booster:booster-task-analyser:'),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("booster_version")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\napply plugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'com.didiglobal.booster'")]),t._v("\n")])])]),a("p",[t._v("然后在命令行执行 "),a("em",[t._v("analyse")]),t._v(" 任务：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./gradlew analyse\n")])])]),a("p",[t._v("执行成功之后，在 "),a("em",[t._v("build/reports/")]),t._v(" 目录中会生成相应的 "),a("em",[t._v("dot")]),t._v(" 格式的报告，可以通过 "),a("em",[t._v("dot")]),t._v(" 工具，将 "),a("em",[t._v("dot")]),t._v(" 文件转换成 "),a("em",[t._v("png")]),t._v(" 格式：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" build/reports -name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*.dot'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" -t -I"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" dot -O -Tpng "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"白名单与黑名单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#白名单与黑名单"}},[t._v("#")]),t._v(" 白名单与黑名单")]),t._v(" "),a("p",[t._v("「白名单」是分析过程中忽略的 API，「黑名单」是分析过程中要匹配的 API，"),a("em",[t._v("Booster")]),t._v(" 内置了 "),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-task-analyser/src/main/resources/whitelist.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("whiltelist.txt"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://github.com/didi/booster/blob/master/booster-task-analyser/src/main/resources/blacklist.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("blacklist.txt"),a("OutboundLink")],1),t._v("，这些都是项目实践经验所得，当然，"),a("em",[t._v("Booster")]),t._v(" 也支持自定义「白名单」与「黑名单」。")]),t._v(" "),a("h3",{attrs:{id:"通过-gradle-properties-指定黑-白名单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-gradle-properties-指定黑-白名单"}},[t._v("#")]),t._v(" 通过 "),a("em",[t._v("gradle.properties")]),t._v(" 指定黑/白名单")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("booster.task.analyser.whitelist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("file:///Users/booster/whitelist.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("booster.task.analyser.blacklist")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("file:///Users/booster/blacklist.txt")]),t._v("\n")])])]),a("h3",{attrs:{id:"通过命令行指定黑-白名单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过命令行指定黑-白名单"}},[t._v("#")]),t._v(" 通过命令行指定黑/白名单")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./gradlew assembleDebug "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -Pbooster.task.analyser.whitelist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("file:///Users/booster/whitelist.txt "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -Pbooster.task.analyser.blacklist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("file:///Users/booster/blacklist.txt\n")])])]),a("p",[a("em",[t._v("whitelist")]),t._v(" 和 "),a("em",[t._v("blacklist")]),t._v(" 可以是远程的 URL，如:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./gradlew assembleDebug "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -Pbooster.task.analyser.whitelist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://booster.johnsonlee.io/analyser/whitelist.txt\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);